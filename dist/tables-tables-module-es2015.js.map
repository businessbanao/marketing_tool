{"version":3,"sources":["./src/app/pages/tables/smart-table/smart-table.component.ts","./src/app/pages/tables/smart-table/smart-table.component.html","./src/app/pages/tables/tables-routing.module.ts","./src/app/pages/tables/tables.component.ts","./src/app/pages/tables/tables.module.ts","./src/app/pages/tables/tree-grid/tree-grid.component.ts","./src/app/pages/tables/tree-grid/tree-grid.component.html"],"names":[],"mappings":"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","file":"tables-tables-module-es2015.js","sourcesContent":["import { Component } from '@angular/core';\nimport { LocalDataSource } from 'ng2-smart-table';\n\nimport { SmartTableData } from '../../../@core/data/smart-table';\nimport { UserServices } from '../../../provider/user.services';\n\n@Component({\n  selector: 'ngx-smart-table',\n  templateUrl: './smart-table.component.html',\n  styleUrls: ['./smart-table.component.scss'],\n})\nexport class SmartTableComponent {\n\n  settings = {\n    editable:false,\n    actions:{\n      add: false,\n      edit:false,\n    },\n    // add: {\n    //   addButtonContent: '<i class=\"nb-plus\"></i>',\n    //   createButtonContent: '<i class=\"nb-checkmark\"></i>',\n    //   cancelButtonContent: '<i class=\"nb-close\"></i>',\n    // },\n    // edit: {\n    //   editButtonContent: '<i class=\"nb-edit\"></i>',\n    //   saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n    //   cancelButtonContent: '<i class=\"nb-close\"></i>',\n    // },\n    delete: {\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\n      confirmDelete: true,\n    },\n    columns: {\n      _id: {\n        title: 'ID',\n        type: 'number',\n      },\n      fullName: {\n        title: 'Name',\n        type: 'string',\n      },\n      mobile: {\n        title: 'Mobile',\n        type: 'string',\n      },\n      email: {\n        title: 'E-mail',\n        type: 'string',\n      },\n\n      isAccountActive: {\n        title: 'Status',\n        type: 'Boolean',\n      },\n    },\n  };\n\n  source: LocalDataSource = new LocalDataSource();\n\n  public customersList: any = []\n  public productList: any = []\n\n\n\n  constructor(private service: SmartTableData, private _userServices: UserServices,) {\n    // const data = this.service.getData();\n    // this.source.load(data);\n    // console.log(data)\n\n  }\n\n  ngOnInit(): void {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n    this.getCustomerList()\n  }\n\n  onDeleteConfirm(event): void {\n    if (window.confirm('Are you sure you want to delete?')) {\n      event.confirm.resolve();\n    } else {\n      event.confirm.reject();\n    }\n  }\n\n  getCustomerList() {\n    this._userServices.fetchCustomersList().subscribe((data: any) => {\n      console.log(data, \"data\")\n      if (data.length !== 0) {\n        this.customersList = data.UserList;\n        console.log(\"this.customersList\",this.customersList)\n\n        this.customersList.forEach((cus)=>{\n            cus._id = cus._id.slice(0,10);\n            cus.fullName= (cus.fullName == '') ?  \"-\" : cus.fullName;\n            cus.email = (cus.email == undefined || cus.email == '' ) ?  \"-\" : cus.email;\n            cus.mobile=(cus.mobile == '') ?  \"-\" : cus.mobile;\n            cus.isAccountActive =(cus.isAccountActive == true) ?  \"Active\" : \"Deactive\";\n\n        })\n\n\n\n        this.source.load(this.customersList);\n      }\n    });\n  }\n\n}\n","<nb-card>\n  <nb-card-header>\n    Regular Customers\n  </nb-card-header>\n\n  <nb-card-body>\n    <ng2-smart-table [settings]=\"settings\" [source]=\"source\" (deleteConfirm)=\"onDeleteConfirm($event)\">\n    </ng2-smart-table>\n  </nb-card-body>\n</nb-card>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TablesComponent } from './tables.component';\nimport { SmartTableComponent } from './smart-table/smart-table.component';\nimport { TreeGridComponent } from './tree-grid/tree-grid.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: TablesComponent,\n  children: [\n    {\n      path: 'smart-table',\n      component: SmartTableComponent,\n    },\n    {\n      path: 'tree-grid',\n      component: TreeGridComponent,\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TablesRoutingModule { }\n\nexport const routedComponents = [\n  TablesComponent,\n  SmartTableComponent,\n  TreeGridComponent,\n];\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-tables',\n  template: `<router-outlet></router-outlet>`,\n})\nexport class TablesComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { NbCardModule, NbIconModule, NbInputModule, NbTreeGridModule } from '@nebular/theme';\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\n\nimport { ThemeModule } from '../../@theme/theme.module';\nimport { TablesRoutingModule, routedComponents } from './tables-routing.module';\nimport { FsIconComponent } from './tree-grid/tree-grid.component';\n\n@NgModule({\n  imports: [\n    NbCardModule,\n    NbTreeGridModule,\n    NbIconModule,\n    NbInputModule,\n    ThemeModule,\n    TablesRoutingModule,\n    Ng2SmartTableModule,\n  ],\n  declarations: [\n    ...routedComponents,\n    FsIconComponent,\n  ],\n})\nexport class TablesModule { }\n","import { Component, Input } from '@angular/core';\nimport { NbSortDirection, NbSortRequest, NbTreeGridDataSource, NbTreeGridDataSourceBuilder } from '@nebular/theme';\nimport { SmartTableData } from '../../../@core/data/smart-table';\nimport { LocalDataSource } from 'ng2-smart-table';\n\ninterface TreeNode<T> {\n  data: T;\n  children?: TreeNode<T>[];\n  expanded?: boolean;\n}\n\ninterface FSEntry {\n  name: string;\n  size: string;\n  kind: string;\n  items?: number;\n}\n\n@Component({\n  selector: 'ngx-tree-grid',\n  templateUrl: './tree-grid.component.html',\n  styleUrls: ['./tree-grid.component.scss'],\n})\nexport class TreeGridComponent {\n  customColumn = 'name';\n\n  settings = {\n    editable:false,\n    actions:{\n      add: false,\n      edit:false,\n    },\n    // add: {\n    //   addButtonContent: '<i class=\"nb-plus\"></i>',\n    //   createButtonContent: '<i class=\"nb-checkmark\"></i>',\n    //   cancelButtonContent: '<i class=\"nb-close\"></i>',\n    // },\n    // edit: {\n    //   editButtonContent: '<i class=\"nb-edit\"></i>',\n    //   saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n    //   cancelButtonContent: '<i class=\"nb-close\"></i>',\n    // },\n    delete: {\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\n      confirmDelete: true,\n    },\n    columns: {\n      id: {\n        title: 'ID',\n        type: 'number',\n      },\n      firstName: {\n        title: 'First Name',\n        type: 'string',\n      },\n      lastName: {\n        title: 'Last Name',\n        type: 'string',\n      },\n      username: {\n        title: 'Username',\n        type: 'string',\n      },\n      email: {\n        title: 'E-mail',\n        type: 'string',\n      },\n      age: {\n        title: 'Age',\n        type: 'number',\n      },\n    },\n  };\n\n  source: LocalDataSource = new LocalDataSource();\n\n\n  defaultColumns = [ 'size', 'kind', 'items' ];\n  allColumns = [ this.customColumn, ...this.defaultColumns ];\n\n  dataSource: NbTreeGridDataSource<FSEntry>;\n\n  sortColumn: string;\n  sortDirection: NbSortDirection = NbSortDirection.NONE;\n\n  constructor(private service: SmartTableData,private dataSourceBuilder: NbTreeGridDataSourceBuilder<FSEntry>) {\n    // this.dataSource = this.dataSourceBuilder.create(this.data);\n    // const data = this.service.getData();\n    // this.source.load(data);\n  }\n\n  updateSort(sortRequest: NbSortRequest): void {\n    this.sortColumn = sortRequest.column;\n    this.sortDirection = sortRequest.direction;\n  }\n\n  getSortDirection(column: string): NbSortDirection {\n    if (this.sortColumn === column) {\n      return this.sortDirection;\n    }\n    return NbSortDirection.NONE;\n  }\n\n  onDeleteConfirm(id){\n\n  }\n\n  private data: TreeNode<FSEntry>[] = [\n    {\n      data: { name: 'Projects', size: '1.8 MB', items: 5, kind: 'dir' },\n      children: [\n        { data: { name: 'project-1.doc', kind: 'doc', size: '240 KB' } },\n        { data: { name: 'project-2.doc', kind: 'doc', size: '290 KB' } },\n        { data: { name: 'project-3', kind: 'txt', size: '466 KB' } },\n        { data: { name: 'project-4.docx', kind: 'docx', size: '900 KB' } },\n      ],\n    },\n    {\n      data: { name: 'Reports', kind: 'dir', size: '400 KB', items: 2 },\n      children: [\n        { data: { name: 'Report 1', kind: 'doc', size: '100 KB' } },\n        { data: { name: 'Report 2', kind: 'doc', size: '300 KB' } },\n      ],\n    },\n    {\n      data: { name: 'Other', kind: 'dir', size: '109 MB', items: 2 },\n      children: [\n        { data: { name: 'backup.bkp', kind: 'bkp', size: '107 MB' } },\n        { data: { name: 'secret-note.txt', kind: 'txt', size: '2 MB' } },\n      ],\n    },\n  ];\n\n  getShowOn(index: number) {\n    const minWithForMultipleColumns = 400;\n    const nextColumnStep = 100;\n    return minWithForMultipleColumns + (nextColumnStep * index);\n  }\n}\n\n@Component({\n  selector: 'ngx-fs-icon',\n  template: `\n    <nb-tree-grid-row-toggle [expanded]=\"expanded\" *ngIf=\"isDir(); else fileIcon\">\n    </nb-tree-grid-row-toggle>\n    <ng-template #fileIcon>\n      <nb-icon icon=\"file-text-outline\"></nb-icon>\n    </ng-template>\n  `,\n})\nexport class FsIconComponent {\n  @Input() kind: string;\n  @Input() expanded: boolean;\n\n  isDir(): boolean {\n    return this.kind === 'dir';\n  }\n}\n","<!-- <nb-card>\n  <nb-card-body>\n\n    <label class=\"search-label\" for=\"search\">Search:</label>\n    <input nbInput [nbFilterInput]=\"dataSource\" id=\"search\" class=\"search-input\">\n\n    <table [nbTreeGrid]=\"dataSource\" [nbSort]=\"dataSource\" (sort)=\"updateSort($event)\">\n\n      <tr nbTreeGridHeaderRow *nbTreeGridHeaderRowDef=\"allColumns\"></tr>\n      <tr nbTreeGridRow *nbTreeGridRowDef=\"let row; columns: allColumns\"></tr>\n\n      <ng-container [nbTreeGridColumnDef]=\"customColumn\">\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(customColumn)\" *nbTreeGridHeaderCellDef>\n          {{customColumn}}\n        </th>\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">\n          <ngx-fs-icon [kind]=\"row.data.kind\" [expanded]=\"row.expanded\"></ngx-fs-icon>\n          {{row.data[customColumn]}}\n        </td>\n      </ng-container>\n\n      <ng-container *ngFor=\"let column of defaultColumns; let index = index\"\n                    [nbTreeGridColumnDef]=\"column\"\n                    [showOn]=\"getShowOn(index)\">\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(column)\" *nbTreeGridHeaderCellDef>\n          {{column}}\n        </th>\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">{{row.data[column] || '-'}}</td>\n      </ng-container>\n\n    </table>\n\n  </nb-card-body>\n</nb-card> -->\n\n<nb-card>\n  <nb-card-header>\n    Prospect Customers\n  </nb-card-header>\n\n  <nb-card-body>\n    <ng2-smart-table [settings]=\"settings\" [source]=\"source\" (deleteConfirm)=\"onDeleteConfirm($event)\">\n    </ng2-smart-table>\n  </nb-card-body>\n</nb-card>\n"],"sourceRoot":"webpack:///"}